{"version":3,"sources":["components/data/sidenav.js","components/BreadCrums/BreadCrum.js","components/CardTab/export_3.png","components/CardTab/CardTab.js","components/Guides/SettingEnv/projectSakura.png","components/Guides/SettingEnv/SettingEnv.js","components/Guides/ReportBug/ReportBug.js","components/Guides/BuildSakura/BuildSakura.js","components/Guides/InstallSakura/InstallSakura.js","components/Guides/ApplyMaintainers/ApplyMaintainers.js","components/Guides/BuildFlags/BuildFlags.js","components/data/data.js","components/Navbar/MenuPopup.js","components/PersistentDrawerLeft/logo.png","components/PersistentDrawerLeft/PersistentDrawerLeft.js","App.js","reportWebVitals.js","index.js"],"names":["data","topname","topicon","content","name","icon","url","withRouter","useState","window","location","href","split","setData","useEffect","className","toUpperCase","CardTab","class","style","backgroundColor","src","Mascot","width","alt","SettingEnv","image","ReportBug","target","BuildSakura","language","dracula","InstallSakura","ApplyMaintainers","height","frameborder","marginheight","marginwidth","BuildFlags","filedata","MenuPopupState","popupState","usePopupState","variant","popupId","bindTrigger","Menu","bindMenu","onClick","close","MenuItem","drawerWidth","useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","flexGrow","contentShift","title","pathid","useParams","classes","useTheme","React","midcontent","setmidcontent","console","log","dataa","filter","elem","open","setOpen","innerWidth","setWidth","updateWidthAndHeight","addEventListener","removeEventListener","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","edge","borderRadius","paddingBottom","Image","Button","Drawer","overflow","anchor","paper","zIndex","gap","direction","marginTop","map","elem1","Divider","ListItem","ListItemText","primary","List","insideelem","to","button","ListItemIcon","textDecoration","App","basename","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b842a227.chunk.js","sourcesContent":["import SettingsOverscanIcon from \"@material-ui/icons/SettingsOverscan\";\nimport ReportProblemIcon from \"@material-ui/icons/ReportProblem\";\nimport BuildSakuraIcon from \"@material-ui/icons/Build\"\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\nimport PhoneAndroidIcon from \"@material-ui/icons/PhoneAndroid\";\nimport BookIcon from \"@material-ui/icons/Book\";\nimport SlideshowIcon from \"@material-ui/icons/Slideshow\";\nimport GestureTwoToneIcon from \"@material-ui/icons/GestureTwoTone\";\nimport TouchAppIcon from \"@material-ui/icons/TouchApp\";\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\nimport NotificationsActiveIcon from \"@material-ui/icons/NotificationsActive\";\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\nimport HomeIcon from \"@material-ui/icons/Home\";\n\nconst data = [\n  {\n    topname: \"Basic Info\",\n    topicon: <HomeIcon />,\n    content: [\n      {\n        name: \"Building Sakura\",\n        icon: <BuildSakuraIcon />,\n        url: \"/build-sakura\",\n      },\n      {\n        name: \"Installing Sakura\",\n        icon: <CloudDownloadIcon />,\n        url: \"/install-sakura\",\n      },\n      {\n        name: \"Reporting a bug\",\n        icon: <ReportProblemIcon />,\n        url: \"/report-bug\",\n      },      \n    ],\n  },\n  {\n    topname: \"Maintainers\",\n    topicon: <HomeIcon />,\n\n    content: [\n      {\n        name: \"Apply for maintainership\",\n        icon: <GroupAddIcon />,\n        url: \"/apply\",\n      },\n      {\n        name: \"Build Flags\",\n        icon: <BookIcon />,\n        url: \"/build-flags\",\n      },\n    ],\n  },\n  {\n    topname: \"Features\",\n    topicon: <HomeIcon />,\n    content: [\n      {\n        name: \"Animation\",\n        icon: <SlideshowIcon />,\n        url: \"/animation\",\n      },\n      {\n        name: \"Gestures\",\n        icon: <GestureTwoToneIcon />,\n        url: \"/gestures\",\n      },\n      {\n        name: \"Hardware Buttons\",\n        icon: <TouchAppIcon />,\n        url: \"/hardware-buttons\",\n      },\n      {\n        name: \"Miscellaneous\",\n        icon: <GestureTwoToneIcon />,\n        url: \"/miscellaneous\",\n      },\n      {\n        name: \"Navigation\",\n        icon: <NavigationIcon />,\n        url: \"/navigation\",\n      },\n      {\n        name: \"Notification\",\n        icon: <NotificationsActiveIcon />,\n        url: \"/notification\",\n      },\n      {\n        name: \"Power Menu\",\n        icon: <PowerSettingsNewIcon />,\n        url: \"/power-menu\",\n      },\n      {\n        name: \"Statusbar\",\n        icon: <EqualizerIcon />,\n        url: \"/statusbar\",\n      },\n    ],\n  },\n];\nexport default data;\n","import React, { useEffect, useState } from \"react\";\nimport \"./BreadCrum.css\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport { withRouter } from \"react-router-dom\";\n\nconst BreadCrum = () => {\n  const [data, setData] = useState(window.location.href.split(\"/\"));\n\n  useEffect(() => {\n    setData(window.location.href.split(\"/\"));\n  }, [window.location.href]);\n  return (\n    <div className=\"breadcrum\">\n      <div className=\"breadcrum_content\">\n        <HomeIcon className=\"breadcrum_home\" /> {data[3].toUpperCase()} /{\" \"}\n        {data[4] && data[4].toUpperCase()}\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(BreadCrum);\n","export default __webpack_public_path__ + \"static/media/export_3.eae36173.png\";","import React from \"react\";\nimport \"./CardTab.css\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\nimport TelegramIcon from \"@material-ui/icons/Telegram\";\nimport WebIcon from \"@material-ui/icons/Web\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport Mascot from \"./export_3.png\";\n\nconst CardTab = () => {\n  return (\n    <div className=\"cardtab\">\n      <div class=\"card_table_of_content\">\n        <div className=\"card_list\">\n          <h5 className=\"card_heading\">Talk with us</h5>\n          <div className=\"card_listitem\">\n            <WebIcon style={{ backgroundColor: \"#1e1e1e\" }} /><a href=\"https://projectsakura.xyz\">Website</a>\n          </div>\n          <div className=\"card_listitem\">\n            <GetAppIcon style={{ backgroundColor: \"#1e1e1e\" }} /><a href=\"https://projectsakura.xyz/download\">Download</a>\n          </div>\n          <div className=\"card_listitem\">\n            <EqualizerIcon style={{ backgroundColor: \"#1e1e1e\" }} /><a href=\"https://projectsakura.xyz/stats.html\">Stats</a>\n          </div>          \n          <div className=\"card_listitem\">\n            <GitHubIcon style={{ backgroundColor: \"#1e1e1e\" }} /><a href=\"https://github.com/ProjectSakura\">Github</a>\n          </div>\n          <div className=\"card_listitem\">\n            <TelegramIcon style={{ backgroundColor: \"#1e1e1e\" }} /><a href=\"https://t.me/ProjectSakura\">Telegram </a>\n          </div>          \n        </div>\n      </div>\n      <div className=\"mascot\">\n        <center>\n          <h4>Our Mascot</h4>\n          <img\n            src={Mascot}\n            style={{ width: \"100%\" }}\n            alt=\"project sakura mascot\"\n          />\n        </center>\n      </div>\n    </div>\n  );\n};\n\nexport default CardTab;\n","export default __webpack_public_path__ + \"static/media/projectSakura.2627941a.png\";","import React from \"react\";\nimport image from \"./projectSakura.png\";\nimport \"./SettingEnv.css\";\n\nconst SettingEnv = () => {\n  return (\n    <div className=\"environment\">\n      <center>\n        <div className=\"content\">\n          <img className=\"home_image\" alt=\"data\" src={image}></img>        \n          <h1>WELCOME TO PROJECT SAKURA WIKI</h1>\n          <hr />\n          <h3>\n           Some basic info about ProjectSakura!</h3><p> ProjectSakura was started by LordShenron as a hobby Project in February of 2020. Later on ArunTeltia joined in as a fulltime web developer for the Project.</p>\n           <p>ProjectSakura uses LineageOS as base and closely stick to it. Infact you can build ProjectSakura using same LineageOS trees.</p>\n           <p>\n           As of this moment ProjectSakura have evolved through 2 major Android Releases. The current Stable version is 5.R based on Android 11. \n           </p>\n           <hr />\n           <h4> This Wiki is completely created from scratch by ArunTeltia and LordShenron. <br />© All Rights Reserved 2020-2021, ProjectSakura</h4>\n        </div>\n      </center>\n    </div>\n  );\n};\n\nexport default SettingEnv;\n","import React from \"react\";\nimport \"./ReportBug.css\";\n\nconst ReportBug = () => {\n  return (\n    <div className=\"environment\">\n      <center>\n        <div className=\"content\">\n          <h2>REPORTING A BUG</h2>\n          <p>Here we will guide you on how to report a bug related to Project Sakura</p>\n          <hr />          \n          <h2>WHERE SHOULD I REPORT BUGS</h2>\n          <p>You can report Bugs that are related to our Source on our <a href=\"https://github.com/ProjectSakura/Bug_Tracker\" target=\"_blank\">Bug Reports Repo.</a>\n          <br />\n          If you are facing a bug related to a specific device then you can report about it to the device maintainer in our Telegram Chat or the device specific support Group.\n          </p>\n          <hr />\n          <h2>WHAT DO I NEED TO INCLUDE IN THE BUG REPORT </h2>\n          <p>If you are going to report the bug on our Bug report Repo then you can use the template that we have designed for opening Issues there. \n          <br />\n          If you are going to report any device specific bug then you will need to write the description of the bug and properly explain the procedure of \n          reproducing the bug. It is also required to attach screenshots or a logcat. \n          </p>\n          <hr />\n          <h2>HOW TO TAKE LOGCATS </h2>\n          <p>You can follow this amazing article to know how to properly take log using both ADB and Any Logcat Application,\n          <a href=\"https://telegra.ph/BUG-REPORTING-GUIDE-FOR-DUMMIES-10-05\" target=\"_blank\"> Follow this link</a></p>\n        </div>\n      </center>\n    </div>\n  );\n};\n\nexport default ReportBug;","import React from \"react\";\nimport \"./BuildSakura.css\";\nimport SyntaxHighLighter from \"react-syntax-highlighter\";\nimport { dracula } from \"react-syntax-highlighter/dist/cjs/styles/hljs\";\n\nconst BuildSakura = () => {\n  return (\n    <div className=\"environment\">\n      <center>\n        <div className=\"content\">\n          <h2>BUILDING SAKURA</h2>\n          <p>\n            Here we will guide you on how to build Project Sakura for your\n            device.\n          </p>\n          <hr />\n          <h2>HOW TO SETUP A BUILD ENVIRONMENT</h2>\n          <p>\n            To Build Project Sakura you can use any 64 Bit Linux Distro, though\n            we recommend using Ubuntu 18.04, LinuxMint, MXLinux or Manjaro. You\n            can setup the build environment using\n            <a href=\"https://github.com/akhilnarang/scripts\" target=\"_blank\">\n              {\" \"}\n              Akhil Narang's Script\n            </a>\n            <br />\n            <br />\n          </p>\n          <div className=\"wrapper\">\n            <SyntaxHighLighter language=\"bash\" style={dracula}>\n              {\n                \"git clone https://github.com/akhilnarang/scripts; cd scripts; sudo bash setup/android_build_env.sh\"\n              }\n            </SyntaxHighLighter>\n          </div>\n          <br />\n          <p>\n            Or You can install all the packages manually using the commands\n            below.\n            <br />\n            <br />\n          </p>\n          <div className=\"wrapper\">\n            <SyntaxHighLighter language=\"bash\" style={dracula}>\n              {\n                \"sudo apt-get install openjdk-8-jdk && sudo apt-get update && sudo apt-get install git-core gnupg flex bison gperf libsdl1.2-dev libesd0-dev squashfs-tools build-essential zip curl libncurses5-dev zlib1g-dev openjdk-8-jre openjdk-8-jdk pngcrush schedtool libxml2 libxml2-utils xsltproc lzop libc6-dev schedtool g++-multilib lib32z1-dev lib32ncurses5-dev lib32readline-gplv2-dev gcc-multilib maven tmux screen w3m ncftp\"\n              }\n            </SyntaxHighLighter>\n          </div>\n          <hr />\n          <h2>SYNCING SOURCES </h2>\n          <p>\n            To Sync ProjectSakura Sources you will need to execute the following\n            command <br />\n            (PS: This command will shallow sync the sources which saves\n            bandwidth and storage space if you are just going to build and not\n            do any source side changes.)\n            <br />\n            <br />\n          </p>\n          <div className=\"wrapper\">\n            <SyntaxHighLighter language=\"bash\" style={dracula}>\n              {\n                \"repo init --depth=1 -u git://github.com/ProjectSakura/android.git -b 11 && repo sync --current-branch --force-sync --no-clone-bundle --no-tags --optimized-fetch --prune -j `nproc`\"\n              }\n            </SyntaxHighLighter>\n          </div>\n          <hr />\n          <h2>BUILDING SAKURA </h2>\n          <p>\n            Now execute the below command to start building ProjectSakura,\n            replace \"devicecodename\" with your device's code. E.g, for ASUS\n            ZENFONE MAX PRO M1 we will write X00T.\n            <br />\n            <br />\n          </p>\n          <SyntaxHighLighter language=\"bash\" style={dracula}>\n            {\n              \". build/envsetup.sh && lunch lineage_devicecodename-userdebug && mka bacon -jx\"\n            }\n          </SyntaxHighLighter>\n        </div>\n      </center>\n    </div>\n  );\n};\n\nexport default BuildSakura;\n","import React from \"react\";\nimport \"./InstallSakura.css\";\n\nconst InstallSakura = () => {\n  return (\n    <div className=\"environment\">\n      <center>\n        <div className=\"content\">\n          <h2>INSTALLING SAKURA </h2>\n          <p>In this article we will tell you how to flash ProjectSakura. <br /><br />\n          <i>This article only cover universal steps that you need to take and things may differ for every device so it's better if you also follow the XDA thread for your device.</i>  </p>\n          <hr />          \n          <h2>DOWNLOAD PROJECT SAKURA</h2>\n          <p>To flash ProjectSakura you will need to get the flashable ROM zip for your device. We have a download center where you can get builds for every device that we support, Go to  <a href=\"https://ProjectSakura.xyz/download\" target=\"_blank\">ProjectSakura | Downloads</a>\n          <br /><br />\n          If you cannot find the build for your device on our download center then it probably is unsupported  by us.\n          <br /><br />\n          <i>Note: Some devices also need specific firmwares and Vendors to be flashed with ROM. To know more you should check the XDA thread or Telegram Chats of your device.</i>          \n          </p>\n          <hr />\n          <h2>FLASHING PROJECT SAKURA </h2>\n          <p>After you have downloaded all the needed files, you can proceed with the flashing process. Boot your device into recovery mode and go to advanced wipe after that wipe dalvik, cache, system, vendor and data. \n          <br /><br />\n          Once you have wiped, flash the required firmware/ vendor zips and the flashable ROM zip. Then reboot to system and enjoy a clean Android experience. \n          <br /><br />          \n          <i>Note: ProjectSakura provides three types of builds GAPPS, VANILLA and MICROG. You may or maynot need to flash a separate GAPPS package depending on the type of the build; maintainer is releasing.</i>\n          </p>\n          <hr />\n          <h2>GAINING ROOT ACCESS</h2>\n          <p>You will need to flash Magisk in order to gain root access. You can download the flashable magisk zip from it's Github Repo. We only recommend you to download magisk from verified sources.\n          </p>\n        </div>\n      </center>\n    </div>\n  );\n};\n\nexport default InstallSakura;","import React from \"react\";\nimport \"./ApplyMaintainers.css\";\n\nconst ApplyMaintainers = () => {\n  return (\n    <div className=\"environment\">\n      <center>\n        <div className=\"content\">\n          <h2>APPLY FOR PROJECT SAKURA MAINTAINERSHIP </h2>\n          <p>In this article we will tell you how you can become an Official ProjectSakura Maintainer.\n          </p>\n          <hr />          \n          <h2>GUIDELINES</h2>\n          <p>You don't need too many skills to be a device maintainer. Though you need to fullfill these simple guidelines.\n          <br /><br />\n          1. You must own the device.\n          <br /><br />\n          2. You must know Basic git ( creating pull requests, properly writing commits, cherry-picking and other basic stuff).\n          <br /><br />\n          3. You must have made some contributions towards your device community instead of just taking a device tree and compiling.\n          <br /><br />\n          4. You must know how to read basic logcats.\n          <br /><br />\n          5. You must have to compile Unofficial builds before you apply for Official.\n          <br /><br />\n          6. Co-Maintaining is allowed but you cannot be a shadow maintainer for some other guy.\n          </p>\n          <hr />\n          <h2>APPLICATION FORM </h2>\n          <p>\n          Once you make sure that you are fullfilling all the above guidelines, you can use the Google Form below to apply for Official maintainership.\n          <br /> <br />\n          <iframe src=\"https://docs.google.com/forms/d/e/1FAIpQLSfKFUSyohdGKQFLEZCxsxCemlcXdKUMPCsShi0TXGJu7ihceg/viewform?embedded=true\" width=\"700\" height=\"520\" frameborder=\"0\" marginheight=\"0\" marginwidth=\"0\">Loading…</iframe>\n          <br /><br />          \n          </p>\n        </div>\n      </center>\n    </div>\n  );\n};\n\nexport default ApplyMaintainers;","import React from \"react\";\nimport \"./BuildFlags.css\";\nimport SyntaxHighLighter from 'react-syntax-highlighter';\nimport { dracula } from 'react-syntax-highlighter/dist/cjs/styles/hljs';\n\nconst BuildFlags = () => {\n  return (\n    <div className=\"environment\">\n      <center>\n        <div className=\"content\">\n          <h2>FLAGS PRESENT IN PROJECT SAKURA</h2>\n          <p>In this article we will tell you about all the available Flags in ProjectSakura</p>\n          <hr />\n          <h2>\n           List of all flags with their functionality.</h2>\n           <p>\n          <SyntaxHighLighter language=\"bash\" style={dracula}>\n          {\n           \"SAKURA_BUILD_TYPE := gapps //For building ProjectSakura with Builtin GAPPS.\"\n          }\n          </SyntaxHighLighter>\n          <br /><br />\n          <SyntaxHighLighter language=\"bash\" style={dracula}>\n          {\n           \"SAKURA_BUILD_TYPE := microg //For building ProjectSakura with Builtin MICROG.\"\n          }\n          </SyntaxHighLighter>\n          <br /><br />\n          <SyntaxHighLighter language=\"bash\" style={dracula}>\n          {\n           \"SAKURA_OPLAUNCHER := true //For building ProjectSakura with default OnePlus Launcher.\"\n          }\n          </SyntaxHighLighter>\n          <br /><br />\n          <SyntaxHighLighter language=\"bash\" style={dracula}>\n          {\n           \"TARGET_USES_BLUR := true //For building ProjectSakura with option to toggle Notification shade Blur.\"\n          }\n          </SyntaxHighLighter>   \n          <br /><br />\n          <SyntaxHighLighter language=\"bash\" style={dracula}>\n          {\n           \"EXTRA_FOD_ANIMATIONS := true //For building ProjectSakura with FODAnimations resources. \"\n          }\n          </SyntaxHighLighter>                 \n           </p>\n        </div>\n      </center>\n    </div>\n  );\n};\n\nexport default BuildFlags;\n","import CloudDownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\nimport PhoneAndroidIcon from \"@material-ui/icons/PhoneAndroid\";\nimport BookIcon from \"@material-ui/icons/Book\";\nimport SlideshowIcon from \"@material-ui/icons/Slideshow\";\nimport GestureTwoToneIcon from \"@material-ui/icons/GestureTwoTone\";\nimport TouchAppIcon from \"@material-ui/icons/TouchApp\";\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\nimport NotificationsActiveIcon from \"@material-ui/icons/NotificationsActive\";\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport SettingEnv from \"../Guides/SettingEnv/SettingEnv\";\nimport ReportBug from \"../Guides/ReportBug/ReportBug\";\nimport BuildSakura from \"../Guides/BuildSakura/BuildSakura\";\nimport InstallSakura from \"../Guides/InstallSakura/InstallSakura\";\nimport ApplyMaintainers from \"../Guides/ApplyMaintainers/ApplyMaintainers\";\nimport BuildFlags from \"../Guides/BuildFlags/BuildFlags\";\n\nconst filedata = [\n  {\n    name: \"Setting up environment\",\n    icon: <SettingEnv />,\n    url: \"/wiki-redesign/\",\n  },\n  {\n    name: \"Build Sakura\",\n    icon: <BuildSakura />,\n    url: \"/wiki-redesign/build-sakura\",\n  },\n  {\n    name: \"Reporting a bug\",\n    icon: <ReportBug />,\n    url: \"/wiki-redesign/report-bug\",\n  },\n  {\n    name: \"Installing Sakura\",\n    icon: <InstallSakura />,\n    url: \"/wiki-redesign/install-sakura\",\n  },\n\n  {\n    name: \"Apply for maintainership\",\n    icon: <ApplyMaintainers />,\n    url: \"/wiki-redesign/apply\",\n  },\n  {\n    name: \"Build Flags\",\n    icon: <BuildFlags />,\n    url: \"/wiki-redesign/build-flags\",\n  },\n  {\n    name: \"Animation\",\n    icon: <SlideshowIcon />,\n    url: \"/wiki-redesign/animation\",\n  },\n  {\n    name: \"Gestures\",\n    icon: <GestureTwoToneIcon />,\n    url: \"/wiki-redesign/gestures\",\n  },\n  {\n    name: \"Hardware Buttons\",\n    icon: <TouchAppIcon />,\n    url: \"/wiki-redesign/hardware-buttons\",\n  },\n  {\n    name: \"Miscellaneous\",\n    icon: <GestureTwoToneIcon />,\n    url: \"/wiki-redesign/miscellaneous\",\n  },\n  {\n    name: \"Navigation\",\n    icon: <NavigationIcon />,\n    url: \"/wiki-redesign/navigation\",\n  },\n  {\n    name: \"Notification\",\n    icon: <NotificationsActiveIcon />,\n    url: \"/wiki-redesign/notification\",\n  },\n  {\n    name: \"Power Menu\",\n    icon: <PowerSettingsNewIcon />,\n    url: \"/wiki-redesign/power-menu\",\n  },\n  {\n    name: \"Statusbar\",\n    icon: <EqualizerIcon />,\n    url: \"/wiki-redesign/statusbar\",\n  },\n];\nexport default filedata;\n","import * as React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport \"./MenuPopup.css\";\n\nimport {\n    usePopupState,\n    bindTrigger,\n    bindMenu,\n  } from 'material-ui-popup-state/hooks'\n  \n  const MenuPopupState = () => {\n    const popupState = usePopupState({ variant: 'popover', popupId: 'demoMenu' })\n    return (\n      <div>\n         <MenuIcon {...bindTrigger(popupState)}/>        \n        <Menu className=\"menu_popup\" {...bindMenu(popupState)}> \n         <CloseIcon className=\"menu_close\" onClick={popupState.close}/>      \n         <span className=\"menu_span\"><MenuItem className=\"menu_items\" href=\"#\">Home</MenuItem></span>\n         <span className=\"menu_span\"><MenuItem className=\"menu_items\" href=\"#\">Downloads</MenuItem></span>\n         <span className=\"menu_span\"><MenuItem className=\"menu_items\" href=\"#\">Stats</MenuItem></span>\n         <span className=\"menu_span\"><MenuItem className=\"menu_items\" href=\"#\">Blog</MenuItem></span>\n        </Menu>\n      </div>\n    )\n  }\n  export default MenuPopupState\n  ","export default __webpack_public_path__ + \"static/media/logo.eae36173.png\";","import React, { useEffect } from \"react\";\nimport clsx from \"clsx\";\n\nimport data from \"../data/sidenav\";\nimport { Link } from \"react-router-dom\";\nimport BreadCrum from \"../BreadCrums/BreadCrum\";\nimport CardTab from \"../CardTab/CardTab\";\nimport filedata from \"../data/data\";\nimport MenuPopup from \"../Navbar/MenuPopup\";\nimport Image from \"./logo.png\";\n\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport \"./PersistentDrawerLeft.css\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { Button } from \"@material-ui/core\";\nimport { useParams, withRouter } from \"react-router-dom\";\n\nconst drawerWidth = 280;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n\n  drawerPaper: {\n    width: drawerWidth,\n    // overflow: \"hidden\",\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: \"space-between\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  title: {\n    flexGrow: 1,\n  },\n\n  toolbar: theme.mixins.toolbar,\n}));\n\nfunction PersistentDrawerLeft() {\n  const { pathid } = useParams();\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const [filldata, setfilldata] = React.useState({});\n  const [midcontent, setmidcontent] = React.useState(null);\n  useEffect(() => {\n    console.log(window.location.href.split(\"/\"));\n    const dataa = filedata.filter(\n      (elem) =>\n        elem.url === \"/wiki-redesign/\" + window.location.href.split(\"/\")[4]\n    );\n\n    setmidcontent(dataa[0].icon);\n    console.log(dataa[0]);\n  }, [pathid, window.location.href]);\n\n  const [open, setOpen] = React.useState(true);\n\n  const [width, setWidth] = React.useState(window.innerWidth);\n\n  const updateWidthAndHeight = () => {\n    setWidth(window.innerWidth);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateWidthAndHeight);\n    return () => window.removeEventListener(\"resize\", updateWidthAndHeight);\n  });\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <div\n            className={classes.title}\n            style={{ display: \"flex\", alignItems: \"center\" }}\n          >\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, open && classes.hide)}\n            >\n              <img\n                style={{\n                  width: \"50px\",\n                  height: \"50px\",\n                  borderRadius: \"20px\",\n                  paddingBottom: \"2px\",\n                }}\n                src={Image}\n                alt=\"logo\"\n              />\n            </IconButton>\n            {!open && (\n              <div>\n                <div>\n                  <h2 className=\"Main-logo\">\n                    <span>Project</span>\n                    <span className=\"Sakura\"> Sakura</span>\n                  </h2>\n                </div>\n                <div className=\"spring\">\n                  <h6>\n                    <i>feels like spring</i>\n                  </h6>\n                </div>\n              </div>\n            )}\n          </div>\n          {width > 720 && (\n            <div>\n              <Button color=\"inherit\">\n                <b>Home</b>\n              </Button>\n              <Button color=\"inherit\">\n                <b>Download</b>\n              </Button>\n              <Button color=\"inherit\">\n                <b>Stats</b>\n              </Button>\n              <Button color=\"inherit\">\n                <b>Blog</b>\n              </Button>\n            </div>\n          )}\n          {width <= 720 && <MenuPopup />}\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        style={{ overflow: \"hidden\" }}\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div\n          className={classes.drawerHeader}\n          style={{\n            zIndex: 1,\n            backgroundColor: \"#1e1e1e\",\n            position: \"fixed\",\n            width: drawerWidth,\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              gap: \"2px\",\n            }}\n          >\n            <img\n              style={{\n                width: \"40px\",\n                height: \"40px\",\n                borderRadius: \"20px\",\n                marginRight: \"7px\",\n              }}\n              src={Image}\n              alt=\"logo\"\n            />\n            <div>\n              <h4 className=\"drawer_logoname\">\n                <span className=\"drawer_project\">Project</span>\n                <span className=\"drawer_sakura\"> Sakura</span>\n              </h4>\n            </div>\n          </div>\n          <IconButton\n            style={{\n              color: \"whitesmoke\",\n            }}\n            onClick={handleDrawerClose}\n          >\n            {theme.direction === \"ltr\" ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <div\n          style={{\n            marginTop: \"55px\",\n            backgroundColor: \"#1e1e1e\",\n            color: \"whitesmoke\",\n          }}\n        >\n          {data.map((elem1) => {\n            return (\n              <>\n                <Divider />\n                <ListItem className=\"drawer_elements\" key={elem1.topname}>\n                  <ListItemText\n                    primary={elem1.topname}\n                    style={{\n                      color: \"#00ccff\",\n                    }}\n                  />\n                </ListItem>\n                <List style={{ padding: \"0px\" }}>\n                  {elem1.content.map((insideelem) => (\n                    <Link to={insideelem.url}>\n                      <ListItem\n                        className=\"drawer_elements\"\n                        button\n                        key={insideelem.url}\n                      >\n                        <ListItemIcon\n                          style={{\n                            color: \"#00ccff\",\n                          }}\n                        >\n                          {insideelem.icon}\n                        </ListItemIcon>\n                        <ListItemText>\n                          <div\n                            style={{\n                              textDecoration: \"none\",\n                              color: \"whitesmoke\",\n                            }}\n                          >\n                            {insideelem.name}\n                          </div>\n                        </ListItemText>\n                      </ListItem>\n                    </Link>\n                  ))}\n                </List>\n              </>\n            );\n          })}\n        </div>\n      </Drawer>\n      {(!open || width > 720) && (\n        <main\n          className={clsx(classes.content, {\n            [classes.contentShift]: open,\n          })}\n        >\n          <div className={classes.drawerHeader} />\n          <BreadCrum />\n          <div className=\"main_content_cards\">\n            <CardTab />\n            {midcontent}\n          </div>\n        </main>\n      )}\n    </div>\n  );\n}\n\nexport default withRouter(PersistentDrawerLeft);\n","import React from \"react\";\nimport PersistentDrawerLeft from \"./components/PersistentDrawerLeft/PersistentDrawerLeft\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nfunction App() {\n  return (\n    <Router basename=\"/wiki-redesign\">\n      <div className=\"App\">\n        <PersistentDrawerLeft />\n        <Switch>\n          <Route path=\"/wiki-redesign/:pathid\"></Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}